# Generated by Django 4.2.23 on 2025-09-21 10:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0013_fix_service_type_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='DeviceToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Date and time when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Date and time when the record was last updated', verbose_name='Updated At')),
                ('token', models.CharField(db_index=True, help_text='Firebase device token for push notifications', max_length=255, unique=True, verbose_name='Device Token')),
                ('device_type', models.CharField(choices=[('android', 'Android'), ('ios', 'iOS'), ('web', 'Web')], db_index=True, default='android', help_text='Type of device (Android, iOS, Web)', max_length=10, verbose_name='Device Type')),
                ('user_agent', models.TextField(blank=True, help_text='User agent string for web devices', null=True, verbose_name='User Agent')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether the device token is active', verbose_name='Is Active')),
                ('last_used', models.DateTimeField(auto_now=True, db_index=True, help_text='Last time this token was used', verbose_name='Last Used')),
            ],
            options={
                'verbose_name': 'Device Token',
                'verbose_name_plural': 'Device Tokens',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Date and time when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Date and time when the record was last updated', verbose_name='Updated At')),
                ('topic', models.CharField(db_index=True, help_text='Topic name to subscribe to', max_length=100, verbose_name='Topic')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Whether the subscription is active', verbose_name='Is Active')),
                ('device_token', models.ForeignKey(help_text='Device token for this subscription', on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='core.devicetoken', verbose_name='Device Token')),
            ],
            options={
                'verbose_name': 'Notification Subscription',
                'verbose_name_plural': 'Notification Subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, help_text='Date and time when the record was created', verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, db_index=True, help_text='Date and time when the record was last updated', verbose_name='Updated At')),
                ('title', models.CharField(help_text='Notification title', max_length=255, verbose_name='Title')),
                ('body', models.TextField(help_text='Notification body/message', verbose_name='Body')),
                ('notification_type', models.CharField(choices=[('push', 'Push Notification'), ('topic', 'Topic Notification'), ('bulk', 'Bulk Notification')], db_index=True, default='push', help_text='Type of notification sent', max_length=10, verbose_name='Notification Type')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('partial', 'Partially Sent')], db_index=True, default='pending', help_text='Current status of the notification', max_length=10, verbose_name='Status')),
                ('target_tokens', models.JSONField(default=list, help_text='List of device tokens targeted', verbose_name='Target Tokens')),
                ('topic', models.CharField(blank=True, db_index=True, help_text='Topic name for topic notifications', max_length=100, null=True, verbose_name='Topic')),
                ('data_payload', models.JSONField(blank=True, default=dict, help_text='Additional data sent with notification', verbose_name='Data Payload')),
                ('success_count', models.PositiveIntegerField(default=0, help_text='Number of successful deliveries', verbose_name='Success Count')),
                ('failure_count', models.PositiveIntegerField(default=0, help_text='Number of failed deliveries', verbose_name='Failure Count')),
                ('error_message', models.TextField(blank=True, help_text='Error message if notification failed', null=True, verbose_name='Error Message')),
                ('firebase_message_id', models.CharField(blank=True, db_index=True, help_text='Firebase message ID for tracking', max_length=255, null=True, verbose_name='Firebase Message ID')),
            ],
            options={
                'verbose_name': 'Notification Log',
                'verbose_name_plural': 'Notification Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['status', 'notification_type'], name='core_notifi_status_61f798_idx'), models.Index(fields=['topic', 'status'], name='core_notifi_topic_ef61b8_idx'), models.Index(fields=['created_at', 'status'], name='core_notifi_created_10764e_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='devicetoken',
            index=models.Index(fields=['device_type', 'is_active'], name='core_device_device__6f3ba9_idx'),
        ),
        migrations.AddIndex(
            model_name='devicetoken',
            index=models.Index(fields=['is_active', 'last_used'], name='core_device_is_acti_dd8d21_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationsubscription',
            index=models.Index(fields=['topic', 'is_active'], name='core_notifi_topic_bef29a_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationsubscription',
            index=models.Index(fields=['device_token', 'is_active'], name='core_notifi_device__8f6100_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='notificationsubscription',
            unique_together={('device_token', 'topic')},
        ),
    ]
